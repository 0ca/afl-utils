#########################
### REQUIRED SETTINGS ###
#########################
[afl.dirs]
# afl-fuzz directory specifications
input = ./in
output = ./out

[target]
# Required target settings
# target binary
target = /usr/bin/target
# Cmdline options for target
cmdline = -a -b -c -d

#########################
#   OPTIONAL SETTINGS   #
#########################
[afl.ctrl]
# afl execution control settings

# Location read by the fuzzed program.
# Valid options are:
#  * a file name
#  * @@ (see afl-fuzz manual)
file = @@
# Timeout in ms for each run
timeout = 200+
# Memory limit in MB for child process
mem_limit = 150
# Use QEMU mode?
qemu = on
# Set CPU affinity for afl-processes.
# Provide a whitespace separated list
# of single or tuple CPU ids.
cpu_affinity = 0,1 2,3 4,5 6,7
# Additional/misc. arguments for afl-fuzz.
# Provide additional cmdline arguments for afl.
# These arguments will directly be passed to afl!
# This way you may provide new, hacked or
# experimental cmdline args to afl-fuzz.
# afl_margs = -T banner

[afl.behavior]
# Optional fuzzing behavior settings

# Skip deterministic steps
dirty = off
# Fuzz without instrumentation
dumb = off
# Fuzzer dictionary
dict = dict/target.dict

[job]
# Fuzzing job settings

# Provide a name for the fuzzing session.
# Master outputs will be written to
# 'output/SESSION000'!
session = SESSION
# Slave-only mode, do not start a master
# instance.
slave_only = off
# Interactive screen mode. Starts every afk
# instance in a separate screen window. Run
# from inside screen!
interactive = off

#[environment]
# Contains a list of environment variables
# afl-multicore will set when using inter-
# active screen mode.
# AFL_PERSISTENT=1
# LD_PRELOAD=desock.so
